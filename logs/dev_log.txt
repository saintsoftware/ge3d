
	GE game Engine for Linux


----------------------------------

typedef char string[]

int main() {
    string test = "string";
}

Thought this may look like was a easy fix to handle strings, in the long run can be very probablematic expecialy when you reach to the fase where
you need to do code optimazition. If you do need to do changes you will need to manualy change all your code...

Best things is to leave the strings was they are in undefined sizes, and latter update what is needed when code is more stable...

char img_format[] = "" ; // after most code is finished if we do know that the variable only needs 5 (+1) characters , we can teak it for it:

char img_format[5] = "" ; // afther all we are agoing to use 10 characters because we find some kind of extra stuff...

 char img_format[10] = "" ; // we add the extra 5 characters, now we will be using a 10 char strings...

since we declare the variable just in one place and reuse it, to tweak all our code, we just need to change it in one place.

---------------------------------------

Added the c_log which removes explenation of C from code in to the Txt file making a bit more redable to all, new people and those already
know how to code... To preventing mixing a bit so comment's now will be keep to the objective level...

--------------------------------------------

Updated the image_lib.c which now explain's the use of Segmentation in C, with live examples... 

------------------------------------------

After doing some attempts on the best option to start with a image file forma, read that BMP and TGA are the most basic file format's to set to
start with so it will be a good starting point...

-------------------------------------

Main.c working, C is more Raw then PHP which is the language that i start with. C is from the family of PHP language. The sintaxe if very similar, one just have to get use to it or leave for good ... hope not...
-------------------

For those that do not wish to develop code for engine, it is still a good place to find information. Well documentation can be usefull to us all... The engine is not just to have some funcionality available is also for some one that grab the files and have some well documented code that prevent him from wondering around and not having a clue on what is going on.

--------------------

My initial plan was to focus on one task and develop from there, but since some one may have diferent interestes put some more misc task's, maybe some one wish give  a little contribute.

---------------------------------

Actualy at some point i writte that the intention is to do code refactor, but for me i don't have much knowledge in C and probably many 
other people. Doing code refactor requires extensive knowledge, it was not a well thought conclusion. The thing that is more realistic to do is to follow tutorials on the tasks to learn more. That was the point of the engine that people can learn from the tasks with tutorials.  

---------------------------